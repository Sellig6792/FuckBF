name: Release

on:
  push:
    tags:
      - "v*.*.*"
      - "!v*.*.*-{alpha,beta,rc}*"

env:
  CARGO_TERM_COLOR: always

jobs:
  #  style:
  #    name: Check Style
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v1
  #
  #      - name: Install rust
  #        uses: actions-rs/toolchain@v1
  #        with:
  #          toolchain: stable
  #          components: rustfmt
  #          profile: minimal
  #          override: true
  #
  #      - name: cargo fmt -- --check
  #        uses: actions-rs/cargo@v1
  #        with:
  #          command: fmt
  #          args: --all -- --check


  test:
    name: Test
    #    needs: [style]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build: [ stable, beta, nightly ]
        include:
          - build: beta
            rust: beta
          - build: nightly
            rust: nightly
            benches: true

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust || 'stable' }}
          profile: minimal
          override: true

      - name: Build debug
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.features }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features }}

      - name: Test all benches
        if: matrix.benches
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --benches ${{ matrix.features }}
  deploy:
    name: Deploy
    needs: [ test ]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        target: [ aarch64-unknown-linux-gnu,
                  armv7-unknown-linux-gnueabihf,
                  i686-unknown-linux-gnu, i686-unknown-linux-musl,
                  mips-unknown-linux-gnu, mips64-unknown-linux-gnuabi64, mips64el-unknown-linux-gnuabi64, mipsel-unknown-linux-gnu,
                  powerpc-unknown-linux-gnu, powerpc64-unknown-linux-gnu, powerpc64le-unknown-linux-gnu,
                  arm-unknown-linux-gnueabi,
                  x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl, x86_64-pc-windows-gnu ]
        os: [ ubuntu-latest ]

        include:
          - target: x86_64-apple-darwin
            os: macos-latest



    # Runs on latest ubuntu by default except for windows targets
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Rename binary (Linux & macOS)
        if: matrix.target != 'x86_64-pc-windows-gnu'
        run: mv target/${{ matrix.target }}/release/fbf target/${{ matrix.target }}/release/fbf-${{ matrix.target }}

      - name: Rename binary (Windows)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: mv target/${{ matrix.target }}/release/fbf.exe target/${{ matrix.target }}/release/fbf-${{ matrix.target }}.exe


      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target }}/release/fbf-${{ matrix.target }}*
          discussion_category_name: Q&A
          token: ${{ secrets.PAT_GITHUB }}
